name: Create Release

on:
  release:
    types: [created]

jobs:
  create_linux_release:
    runs-on: manuelrunner
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version-file: pyproject.toml

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          
      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Create Linux Release File
        run: poetry run pyinstaller --onefile main.py

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./dist/main
          asset_name: glacier_linux_x64.bin
          asset_content_type: application/octet-stream

  create_windows_release:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version-file: pyproject.toml

      - name: Install Poetry
        run: pip install poetry
          
      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Create Windows Release File
        run: poetry run pyinstaller --onefile main.py

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./dist/main.exe
          asset_name: glacier_windows_x64.exe
          asset_content_type: application/octet-stream
